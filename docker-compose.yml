services:
  api:
    build:
      context: .
      dockerfile: RealTimeReporting.API/Dockerfile
    ports:
      - "5000:80"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
    volumes:
      - ./RealTimeReporting.API/appsettings.Docker.json:/app/appsettings.Docker.json


  postgres:
    image: postgres:15
    container_name: my-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: RealTimeReportingDb
      TZ: Europe/Istanbul
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      timeout: 5s
      retries: 10

  redis:
    image: redis:7
    container_name: my-redis
    ports:
      - "6379:6379"

volumes:
  pgdata:
